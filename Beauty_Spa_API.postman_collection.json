{
	"info": {
		"_postman_id": "beauty-spa-api-collection",
		"name": "Beauty Spa Booking API",
		"description": "API collection for Beauty Spa booking system",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"variable": [
		{
			"key": "base_url",
			"value": "http://127.0.0.1:8000",
			"type": "string"
		},
		{
			"key": "api_token",
			"value": "",
			"type": "string"
		}
	],
	"item": [
		{
			"name": "Time Management",
			"item": [
				{
					"name": "Get Available Time Slots",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/available-time-slots?date=2024-12-20&service_id=1",
							"host": ["{{base_url}}"],
							"path": ["api", "available-time-slots"],
							"query": [
								{
									"key": "date",
									"value": "2024-12-20",
									"description": "Date in YYYY-MM-DD format"
								},
								{
									"key": "service_id",
									"value": "1",
									"description": "Optional service ID"
								}
							]
						}
					}
				},
				{
					"name": "Get Time Slot Details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/time-slots/1",
							"host": ["{{base_url}}"],
							"path": ["api", "time-slots", "1"]
						}
					}
				},
				{
					"name": "Get All Times",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/times?date=2024-12-20",
							"host": ["{{base_url}}"],
							"path": ["api", "times"],
							"query": [
								{
									"key": "date",
									"value": "2024-12-20",
									"description": "Optional date filter"
								}
							]
						}
					}
				}
			]
		},
		{
			"name": "Services",
			"item": [
				{
					"name": "Get Service Details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/services/1",
							"host": ["{{base_url}}"],
							"path": ["api", "services", "1"]
						}
					}
				}
			]
		},
		{
			"name": "Promotions",
			"item": [
				{
					"name": "Get Active Promotions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/active-promotions",
							"host": ["{{base_url}}"],
							"path": ["api", "active-promotions"]
						}
					}
				},
				{
					"name": "Validate Promotion Code",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"code\": \"DISCOUNT10\",\n    \"service_id\": \"1\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/validate-promotion",
							"host": ["{{base_url}}"],
							"path": ["api", "validate-promotion"]
						}
					}
				},
				{
					"name": "Check Promotion (GET)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/check-promotion?code=DISCOUNT10&service_id=1",
							"host": ["{{base_url}}"],
							"path": ["api", "check-promotion"],
							"query": [
								{
									"key": "code",
									"value": "DISCOUNT10"
								},
								{
									"key": "service_id",
									"value": "1"
								}
							]
						}
					}
				}
			]
		},
		{
			"name": "Customers",
			"item": [
				{
					"name": "Search Customers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/customers/search?q=nguyen&page=1",
							"host": ["{{base_url}}"],
							"path": ["api", "customers", "search"],
							"query": [
								{
									"key": "q",
									"value": "nguyen",
									"description": "Search query"
								},
								{
									"key": "page",
									"value": "1",
									"description": "Page number"
								}
							]
						}
					}
				}
			]
		},
		{
			"name": "Technician Availability",
			"item": [
				{
					"name": "Check Technician Availability",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/check-technician-availability?date=2024-12-20&time_slot_id=1&technician_id=1",
							"host": ["{{base_url}}"],
							"path": ["api", "check-technician-availability"],
							"query": [
								{
									"key": "date",
									"value": "2024-12-20"
								},
								{
									"key": "time_slot_id",
									"value": "1"
								},
								{
									"key": "technician_id",
									"value": "1"
								}
							]
						}
					}
				}
			]
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Get Current User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{api_token}}",
								"description": "Sanctum token"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/user",
							"host": ["{{base_url}}"],
							"path": ["api", "user"]
						}
					}
				}
			]
		},
		{
			"name": "Technician APIs (Auth Required)",
			"item": [
				{
					"name": "Get Technician Appointments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{api_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/nvkt/appointments?date=2024-12-20&status=pending&limit=10",
							"host": ["{{base_url}}"],
							"path": ["api", "nvkt", "appointments"],
							"query": [
								{
									"key": "date",
									"value": "2024-12-20",
									"description": "Optional date filter"
								},
								{
									"key": "status",
									"value": "pending",
									"description": "Optional status filter"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Results per page (max 50)"
								}
							]
						}
					}
				},
				{
					"name": "Get Appointment Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{api_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/nvkt/appointments/1",
							"host": ["{{base_url}}"],
							"path": ["api", "nvkt", "appointments", "1"]
						}
					}
				},
				{
					"name": "Update Appointment Status",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{api_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"in_progress\",\n    \"notes\": \"Bắt đầu buổi chăm sóc\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/nvkt/appointments/1/status",
							"host": ["{{base_url}}"],
							"path": ["api", "nvkt", "appointments", "1", "status"]
						}
					}
				},
				{
					"name": "Add Professional Note",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{api_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"appointment_id\": \"1\",\n    \"notes\": \"Khách hàng có da nhạy cảm, cần sử dụng sản phẩm dịu nhẹ\",\n    \"recommendations\": \"Nên sử dụng kem dưỡng ẩm hàng ngày\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/nvkt/professional-notes",
							"host": ["{{base_url}}"],
							"path": ["api", "nvkt", "professional-notes"]
						}
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Set current date for testing",
					"const today = new Date();",
					"const tomorrow = new Date(today);",
					"tomorrow.setDate(tomorrow.getDate() + 1);",
					"",
					"const formatDate = (date) => {",
					"    return date.toISOString().split('T')[0];",
					"};",
					"",
					"pm.globals.set('today', formatDate(today));",
					"pm.globals.set('tomorrow', formatDate(tomorrow));"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Basic response validation",
					"pm.test('Status code is 200', function () {",
					"    pm.response.to.have.status(200);",
					"});",
					"",
					"pm.test('Response has success field', function () {",
					"    const jsonData = pm.response.json();",
					"    pm.expect(jsonData).to.have.property('success');",
					"});",
					"",
					"pm.test('Response time is less than 2000ms', function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(2000);",
					"});"
				]
			}
		}
	]
}
